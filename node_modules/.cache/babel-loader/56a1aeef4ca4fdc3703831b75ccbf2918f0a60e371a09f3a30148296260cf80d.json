{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgedion/Documents/Javascript course/facerecognition/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport { useCallback } from \"react\";\n//import Particles from \"react-particles\";\nimport { loadFull } from \"tsparticles\";\nimport Clarifai from \"clarifai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n\n  // states\n  //const [newUrl, setNewUrl] = useState(\"\");\n\n  // comportements\n\n  const onInputChange = event => {\n    console.log(event.target.value);\n  };\n  const onSubmit = () => {\n    console.log(\"Click\");\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n  };\n\n  //affichage\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsparticles\",\n      init: particlesInit,\n      loaded: particlesLoaded,\n      options: {\n        fpsLimit: 120,\n        interactivity: {\n          events: {\n            onHover: {\n              enable: true,\n              mode: \"repulse\"\n            },\n            resize: true\n          },\n          modes: {\n            push: {\n              quantity: 4\n            },\n            repulse: {\n              distance: 200,\n              duration: 0.4\n            }\n          }\n        },\n        particles: {\n          color: {\n            value: \"#357EDD\"\n          },\n          links: {\n            color: \"#357EDD\",\n            distance: 150,\n            enable: true,\n            opacity: 0.5,\n            width: 1\n          },\n          collisions: {\n            enable: true\n          },\n          move: {\n            direction: \"none\",\n            enable: true,\n            outModes: {\n              default: \"bounce\"\n            },\n            random: false,\n            speed: 2,\n            straight: false\n          },\n          number: {\n            density: {\n              enable: true,\n              area: 800\n            },\n            value: 80\n          },\n          opacity: {\n            value: 0.5\n          },\n          shape: {\n            type: \"circle\"\n          },\n          size: {\n            value: {\n              min: 1,\n              max: 5\n            }\n          }\n        },\n        detectRetina: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n      onInputChange: onInputChange,\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navigation","Logo","ImageLinkForm","Rank","useCallback","loadFull","Clarifai","jsxDEV","_jsxDEV","App","_s","particlesInit","engine","console","log","particlesLoaded","container","onInputChange","event","target","value","onSubmit","className","children","Particles","id","init","loaded","options","fpsLimit","interactivity","events","onHover","enable","mode","resize","modes","push","quantity","repulse","distance","duration","particles","color","links","opacity","width","collisions","move","direction","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelgedion/Documents/Javascript course/facerecognition/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport { useCallback } from \"react\";\n//import Particles from \"react-particles\";\nimport { loadFull } from \"tsparticles\";\nimport Clarifai from \"clarifai\";\n\nconst App = () => {\n  const particlesInit = useCallback(async (engine) => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(engine);\n  }, []);\n\n  const particlesLoaded = useCallback(async (container) => {\n    await console.log(container);\n  }, []);\n\n  // states\n  //const [newUrl, setNewUrl] = useState(\"\");\n\n  // comportements\n\n  const onInputChange = (event) => {\n    console.log(event.target.value);\n  };\n\n  const onSubmit = () => {\n    console.log(\"Click\");\n\n    // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // this will default to the latest version_id\n  };\n\n  //affichage\n\n  return (\n    <div className=\"App\">\n      <Particles\n        id=\"tsparticles\"\n        init={particlesInit}\n        loaded={particlesLoaded}\n        options={{\n          fpsLimit: 120,\n          interactivity: {\n            events: {\n              onHover: {\n                enable: true,\n                mode: \"repulse\",\n              },\n              resize: true,\n            },\n            modes: {\n              push: {\n                quantity: 4,\n              },\n              repulse: {\n                distance: 200,\n                duration: 0.4,\n              },\n            },\n          },\n          particles: {\n            color: {\n              value: \"#357EDD\",\n            },\n            links: {\n              color: \"#357EDD\",\n              distance: 150,\n              enable: true,\n              opacity: 0.5,\n              width: 1,\n            },\n            collisions: {\n              enable: true,\n            },\n            move: {\n              direction: \"none\",\n              enable: true,\n              outModes: {\n                default: \"bounce\",\n              },\n              random: false,\n              speed: 2,\n              straight: false,\n            },\n            number: {\n              density: {\n                enable: true,\n                area: 800,\n              },\n              value: 80,\n            },\n            opacity: {\n              value: 0.5,\n            },\n            shape: {\n              type: \"circle\",\n            },\n            size: {\n              value: { min: 1, max: 5 },\n            },\n          },\n          detectRetina: true,\n        }}\n      />\n      <Navigation />\n      <Logo />\n      <Rank />\n      <ImageLinkForm onInputChange={onInputChange} onSubmit={onSubmit} />\n      {/*<FaceRecognition/> */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}