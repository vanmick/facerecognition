{"ast":null,"code":"import { downloadSvgImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nexport async function loadImageShape(engine) {\n  if (!engine.loadImage) {\n    engine.loadImage = async data => {\n      if (!data.name && !data.src) {\n        throw new Error(`${errorPrefix} no image source provided`);\n      }\n      if (!engine.images) {\n        engine.images = [];\n      }\n      if (engine.images.find(t => t.name === data.name || t.source === data.src)) {\n        return;\n      }\n      try {\n        const image = {\n          name: data.name ?? data.src,\n          source: data.src,\n          type: data.src.substring(data.src.length - 3),\n          error: false,\n          loading: true,\n          replaceColor: data.replaceColor,\n          ratio: data.width && data.height ? data.width / data.height : undefined\n        };\n        engine.images.push(image);\n        const imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n        await imageFunc(image);\n      } catch {\n        throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n      }\n    };\n  }\n  const preloader = new ImagePreloaderPlugin(engine);\n  await engine.addPlugin(preloader);\n  await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine));\n}","map":{"version":3,"names":["downloadSvgImage","loadImage","ImageDrawer","ImagePreloaderPlugin","errorPrefix","loadImageShape","engine","data","name","src","Error","images","find","t","source","image","type","substring","length","error","loading","replaceColor","ratio","width","height","undefined","push","imageFunc","preloader","addPlugin","addShape"],"sources":["/Users/michaelgedion/Documents/facerecognition/node_modules/tsparticles-shape-image/esm/index.js"],"sourcesContent":["import { downloadSvgImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nexport async function loadImageShape(engine) {\n    if (!engine.loadImage) {\n        engine.loadImage = async (data) => {\n            if (!data.name && !data.src) {\n                throw new Error(`${errorPrefix} no image source provided`);\n            }\n            if (!engine.images) {\n                engine.images = [];\n            }\n            if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n                return;\n            }\n            try {\n                const image = {\n                    name: data.name ?? data.src,\n                    source: data.src,\n                    type: data.src.substring(data.src.length - 3),\n                    error: false,\n                    loading: true,\n                    replaceColor: data.replaceColor,\n                    ratio: data.width && data.height ? data.width / data.height : undefined,\n                };\n                engine.images.push(image);\n                const imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n                await imageFunc(image);\n            }\n            catch {\n                throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n            }\n        };\n    }\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine));\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,SAAS,QAAQ,SAAS;AACrD,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,oBAAoB,QAAQ,kBAAkB;AACvD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAO,eAAeC,cAAcA,CAACC,MAAM,EAAE;EACzC,IAAI,CAACA,MAAM,CAACL,SAAS,EAAE;IACnBK,MAAM,CAACL,SAAS,GAAG,MAAOM,IAAI,IAAK;MAC/B,IAAI,CAACA,IAAI,CAACC,IAAI,IAAI,CAACD,IAAI,CAACE,GAAG,EAAE;QACzB,MAAM,IAAIC,KAAK,CAAE,GAAEN,WAAY,2BAA0B,CAAC;MAC9D;MACA,IAAI,CAACE,MAAM,CAACK,MAAM,EAAE;QAChBL,MAAM,CAACK,MAAM,GAAG,EAAE;MACtB;MACA,IAAIL,MAAM,CAACK,MAAM,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACL,IAAI,KAAKD,IAAI,CAACC,IAAI,IAAIK,CAAC,CAACC,MAAM,KAAKP,IAAI,CAACE,GAAG,CAAC,EAAE;QAC1E;MACJ;MACA,IAAI;QACA,MAAMM,KAAK,GAAG;UACVP,IAAI,EAAED,IAAI,CAACC,IAAI,IAAID,IAAI,CAACE,GAAG;UAC3BK,MAAM,EAAEP,IAAI,CAACE,GAAG;UAChBO,IAAI,EAAET,IAAI,CAACE,GAAG,CAACQ,SAAS,CAACV,IAAI,CAACE,GAAG,CAACS,MAAM,GAAG,CAAC,CAAC;UAC7CC,KAAK,EAAE,KAAK;UACZC,OAAO,EAAE,IAAI;UACbC,YAAY,EAAEd,IAAI,CAACc,YAAY;UAC/BC,KAAK,EAAEf,IAAI,CAACgB,KAAK,IAAIhB,IAAI,CAACiB,MAAM,GAAGjB,IAAI,CAACgB,KAAK,GAAGhB,IAAI,CAACiB,MAAM,GAAGC;QAClE,CAAC;QACDnB,MAAM,CAACK,MAAM,CAACe,IAAI,CAACX,KAAK,CAAC;QACzB,MAAMY,SAAS,GAAGpB,IAAI,CAACc,YAAY,GAAGrB,gBAAgB,GAAGC,SAAS;QAClE,MAAM0B,SAAS,CAACZ,KAAK,CAAC;MAC1B,CAAC,CACD,MAAM;QACF,MAAM,IAAIL,KAAK,CAAE,GAAEN,WAAY,IAAGG,IAAI,CAACC,IAAI,IAAID,IAAI,CAACE,GAAI,YAAW,CAAC;MACxE;IACJ,CAAC;EACL;EACA,MAAMmB,SAAS,GAAG,IAAIzB,oBAAoB,CAACG,MAAM,CAAC;EAClD,MAAMA,MAAM,CAACuB,SAAS,CAACD,SAAS,CAAC;EACjC,MAAMtB,MAAM,CAACwB,QAAQ,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,IAAI5B,WAAW,CAACI,MAAM,CAAC,CAAC;AACvE"},"metadata":{},"sourceType":"module","externalDependencies":[]}